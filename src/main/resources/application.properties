

# Server Port
server.port=8080
##NCP
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://db-ioaad-kr.vpc-pub-cdb.ntruss.com:3306/studydb?serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=study
#spring.datasource.password=bitcamp!@#123


# logging.level.root=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.hibernate=DEBUG

# mysql
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.url=jdbc:mysql://:3306/myblog?serverTimezone=Asia/Seoul
# spring.datasource.username=root
# spring.datasource.password=1234



# aws RDS mysql, Secrets Manager
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}


#JPA
##스키마 생성 - create(기존 테이블이 있으면 삭제 후 생성.), update(변경된 부분만 반영) 둘 중 하나를 써주게된다.
spring.jpa.hibernate.ddl-auto=update
##DDL 생성시 데이터베이스 고유의 기능을 사용하겠는가?
spring.jpa.generate-ddl=true
## api 호출시 실행되는 sql문을 콘솔에 보여줄 것인가?
spring.jpa.show-sql=true
## 사용할 데이터베이스
spring.jpa.database=mysql
## MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


